// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int             @id @default(autoincrement())
  email                 String          @unique
  firstName             String
  lastName              String
  password              String
  isActive              Boolean         @default(false)
  createdAt             DateTime        @default(now())
  memberships           ClanMember[]
  sentInvitations       Invitation[]    @relation(name: "fromUser")
  receivedInvitations   Invitation[]    @relation(name: "toUser")
}

model ClanMember {
  user          User      @relation(fields: [userId], references: [id])
  clan          Clan      @relation(fields: [clanId], references: [id])
  userId        Int
  clanId        Int
  nickname      String
  avatarKey     String    @default(uuid())
  createdAt     DateTime  @default(now())
  sentPictures  Picture[]
  seenPictures  ClanMemberSeenPicture[]

  @@id([userId, clanId])
}

model Clan {
  id            Int           @id @default(autoincrement())
  name          String
  createdAt     DateTime      @default(now())
  members       ClanMember[]
  invitations   Invitation[]
}

model Invitation {
  fromUser    User      @relation(name: "fromUser", fields: [fromUserId], references: [id])
  toUser      User      @relation(name: "toUser", fields: [toUserId], references: [id])
  clan        Clan      @relation(fields: [clanId], references: [id])
  fromUserId  Int
  toUserId    Int
  clanId      Int
  createdAt   DateTime  @default(now())

  @@id([fromUserId, toUserId, clanId])
}

model Picture {
  sender          ClanMember    @relation(fields: [senderUserId, senderClanId], references: [userId, clanId])
  id              Int           @id @default(autoincrement())
  key             String        @default(uuid())
  senderUserId    Int
  senderClanId    Int
  longitude       Decimal
  latitude        Decimal
  saved           Boolean       @default(false)
  createdAt       DateTime      @default(now())
  seenBy          ClanMemberSeenPicture[]
}

model ClanMemberSeenPicture {
  member        ClanMember     @relation(fields: [memberUserId, memberClanId], references: [userId, clanId])
  picture       Picture        @relation(fields: [pictureId], references: [id])
  memberUserId  Int
  memberClanId  Int
  pictureId     Int

  @@id([memberUserId, memberClanId, pictureId])
}